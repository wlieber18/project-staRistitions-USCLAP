---
title: "Lead Exposure: Exploring Relationship between Blood Lead Levels and Incareration Rates"
subtitle: A Socio-Spatial Analysis
author: "staRstistions - Will Lieber, Wania Iftikhar Khan, AJ Tenser, Kami Akala"
date: "April 30 2025"
format: pdf
execute: 
  warning: false
  message: false
  echo: false
  progress: false
editor: visual
---

```{r}
#| label: load-packages-and-data
#| echo: FALSE
#| warning: false
#| message: false

library(tidyverse)
library(tidymodels)
library(patchwork)
library(ggplot2)
library(readxl)  
library(dplyr)
library(knitr)
library(rms)
library(readr)
library(GGally)


ca_incarceration <- read_excel("data/census_tract_prison.xlsx")
ca_lead <- read_excel("data/New_census_tract_lead_level.xlsx")

ca_demographic <- read_csv("data/demographic.csv", skip = 1)
ca_income <- read_csv("data/income.csv", skip = 1)

#demographics
ca_demographic <- ca_demographic |>
  select(c(1:3, 27, 75, 164:176, 240:245)) |>
  rename_with(~ str_replace(., ".*!!", "")) |>
  filter(Geography != "0400000US06")

ca_demographic <- ca_demographic |>
  mutate(`Geography` = substr(`Geography`, 10, 20)) |>
  mutate(across(!(1:2), as.numeric)) |>
  mutate(`0_to_14` = 
           `Under 5 years` + `5 to 9 years` + 
           `10 to 14 years`,
         
         `15_to_29` =
           `15 to 19 years` + `20 to 24 years` +
           `25 to 29 years`,
         
         `30_to_44` = 
           `30 to 34 years` + `35 to 39 years` +
           `40 to 44 years`,
         
         `45_to_64` = 
           `45 to 49 years` + `50 to 54 years` + 
           `55 to 59 years` + `60 to 64 years`
         ) |>
  mutate(perc_male = `Male population` / `Total population` * 100) |>
  select(!6:18) |>
  rename(census_tract = "Geography") |>
  rename(median_age = "Both sexes")


#income
ca_income <- ca_income |>
  select(c(1, 2, 25)) |>
  rename_with(~ str_replace(., ".*!!", "")) |>
  filter(Geography != "0400000US06")

ca_income <- ca_income |>
  mutate(`Geography` = substr(`Geography`, 10, 20)) |>
  mutate(across(!(1:2), as.numeric)) |>
  rename(census_tract = "Geography")


#incarceration
ca_incarceration <- ca_incarceration |>
  select(c(1, 2, 6)) |>
  mutate(fips = paste0("0", fips)) |>
  rename(census_tract = `fips`) |>
  mutate(across(!(1:2), as.numeric))


#lead
ca_lead <- ca_lead |>
  select(!1) |>
  mutate(`Census Tract` = paste0("0", `Census Tract`)) |>
  rename(census_tract = `Census Tract`) |>
  mutate(across(!1, as.numeric)) |>
  mutate(`Percent of children under 6 with a BLL of 3.5 µg/dL or greater` = 
           `Percent of children under 6 with a BLL of 3.5 µg/dL or greater` * 100)

#joining
joined_data1 <- left_join(ca_lead, ca_incarceration, by = "census_tract")
joined_data2 <- left_join(joined_data1, ca_demographic, by = "census_tract")

joined_data <- left_join(joined_data2, ca_income, by = "census_tract")

#post-join cleaning
bll_data <- joined_data |>
  janitor::clean_names() |>
  select(!c(geographic_area_name_x, geographic_area_name_y)) |>
  rename(num_bll_indicator = 
           number_of_children_under_6_with_a_bll_of_3_5_mg_d_l_or_greater) |>
  rename(perc_bll_indicator =
           percent_of_children_under_6_with_a_bll_of_3_5_mg_d_l_or_greater) |>
  rename(num_bll = 
           total_number_of_children_under_6_with_a_bll) |>
  rename(imprisonment_rt = imprisonment_rate_per_100_000) |>
  rename(tract_name = ca_census_tracts) |>
  rename(other_race = some_other_race) |>
  rename(black = black_or_african_american) |>
  rename(native_am = american_indian_and_alaska_native) |>
  rename(pac_islander = native_hawaiian_and_other_pacific_islander) |>
  rename(age_0_to_14 = x0_to_14) |>
  rename(age_15_to_29 = x15_to_29) |>
  rename(age_30_to_44 = x30_to_44) |>
  rename(age_45_to_64 = x45_to_64) |>
  rename(med_income = median_income_dollars) |>
  rename(total_pop_2020 = total_population)
```

## **Introduction**

Could exposure to lead increase one's likelihood of going to prison? After our team's systematic review of studies, we have explored the potential effects of lead exposure on brain development in children and adults. Various existing studies highlight the detrimental effects of lead on different brain regions, noticeable in a decrease in executive control and cognitive control, thereby affecting memory, mood, behavior and comprehension skills. Such exposure to lead during the developmental years of children causes irreversible damage, the effects of which can be seen later on in life. 

Studies in the past, such as one conducted by Talayero et al. (2023)^1^, have highlighted a strong association between lead exposure during childhood and criminal tendencies during adulthood. We've chosen to investigate this association by comparing lead levels in blood to the incarceration rates. Our research topic inquires whether a relationship exists between the **average** lead levels in blood and incarceration rates in different area, while also considering potential confounding effects of other demographic factors.

This research topic has important societal implications, namely the complicated intersection of crime, environmental racism, and more. It's an ever relevant question today and we hope to come to meaningful conclusions by the end of our analysis. Our initial hypothesis is that there is a positive relationship between blood lead levels/lead exposure and the rate of incarceration with the existence of other interaction effects from factors such as race and income. However, we acknowledge the intricate combination of social and institutional factors that increases one's likelihood of incarceration and understand the possibility for inconclusive findings with the focus on lead exposure.

\
1. [The association between lead exposure and crime: A systematic review](https://pmc.ncbi.nlm.nih.gov/articles/PMC10393136/#pgph.0002177.ref019)

## Our Data

We've chosen to create our data frame from a variety of census data relating to California in 2020. Our data looks at different California census tracts and their respective statistics relating to blood lead levels, income, incarceration rates, and racial demographics. For our analysis, we are particularly focused on `perc_bll_indicator`, `med_income`, our age and race variables and how well they can predict `imprisonment_rt`. The demographic data was collected through the Census data collection process which involves online surveys, in-person questionnaires, and is self-reported. The blood lead level data was compiled using the mandatory reported data entered by laboratories and healthcare workers. The data was sorted into census tracts based on reported street address and observations deemed false positive or false negative by the California Department of Public Health (CDPH) have been omitted. To clean the data, we joined each dataset to each other based on census tract and renamed columns for clarity. In addition, we calculated new columns to simplify categories (i.e. age ranges, ethnicity) and omitted fields which would not be relevant for this investigation.

**Note:** Figures referenced throughout the report can be found in the Appendix section.

### **Univariate Data Exploration**

```{r}
#| label: lead-dist-code-show
#| fig.cap: "Distribution of lead in children"
#| fig.height: 3
#| fig.width: 5

bll_limit <- quantile(bll_data$perc_bll_indicator, 0.99, na.rm = TRUE)

bll_data |>
  ggplot(aes(x = perc_bll_indicator)) +
  geom_histogram(color = "black", fill = "steelblue3") +
  scale_x_continuous(limits = c(0, 12.5)) +
  scale_y_continuous(limits = c(0, 1000)) +
  labs(
    title = "Distribution of Children Under 6
with High Blood Lead Levels in CA",
    subtitle = "by Census Tract",
    x = "Children under 6 with a BLL ≥3.5 µg/dL (%)",
    y = "Count",
    caption = "~99% data captured"
  ) +
  theme_classic()

bll_med <- median(bll_data$perc_bll_indicator, na.rm = TRUE)
bll_iqr <- IQR(bll_data$perc_bll_indicator, na.rm = TRUE)
```

**Blood Lead Levels (Figure 1):** There are 94 census tracts that didn't test blood lead levels in this data. These will likely need to be removed because these observations are not useful in the analysis. Additionally, there is a large concentration of census tracts that have a percent blood level indicator (bll) of 0 (1899 observations). While these should probably be included in the final analysis, removing these for data visualization produces a unimodal distribution that is heavily right skewed. Overall, the median blood level is `r bll_med` and the IQR is `r bll_iqr`.

![Spatial Distribution of BLL in California](data/Layout.png){width="200"}

**Spatial Distribution (Figure 2):** Given the spatial nature of this investigation, it is important to understand how the reported lead levels vary across the state. This map shows that there are contiguous series of tracts, especially in the Los Angeles region, where there may be spatial correlation. This is not surprising, as we expect water conditions across tracts to be similar.

```{r}
#| label: carc-dist-code-plot-show
#| fig-cap: Distribution of Incarceration Rates in CA Census Tracts
#| fig.height: 3
#| fig.width: 5

carc_limit <- quantile(bll_data$imprisonment_rt, 0.99, na.rm = TRUE)

bll_data %>%
  ggplot(aes(x = imprisonment_rt)) +
  geom_histogram(color = "black", fill = "steelblue3") +
  scale_x_continuous(limits = c(0, 1250)) +
  labs(
    title = "Distribution of Imprisonment Rates in CA",
    subtitle = "per 100,000 by Census Tract",
    x = "Imprisonment Rate (per 100,000)",
    y = "Count",
    caption = "Capturing ~99% of data"
  ) + theme_classic() +
  theme(plot.title = element_text(size = 10))

carc_med <- median(bll_data$imprisonment_rt, na.rm = TRUE)
carc_iqr <- IQR(bll_data$imprisonment_rt, na.rm = TRUE)
```

```{r}
#| label: income-code
#| echo: false
#| fig-show: hide

inc_limit <- quantile(bll_data$med_income, 0.99, na.rm = TRUE)

bll_data |>
  ggplot(aes(x = med_income)) +
  geom_histogram(color = "black", fill = "steelblue3") +
  scale_x_continuous(limits = c(0, 200000)) +
  scale_y_continuous(limits = c(0, 1000)) +
  labs(
    title = "Distribution of Median Income in CA",
    subtitle = "by Census Tract",
    x = "Median Income ($)",
    y = "Count",
    caption = "Capturing ~99% of data"
  ) + theme_classic() +
  theme(plot.title = element_text(size = 10))

inc_med <- median(bll_data$med_income, na.rm = TRUE)
inc_iqr <- IQR(bll_data$med_income, na.rm = TRUE)
```

**Imprisonment Rate (Figure 3):** After removing extreme outliers (the top 1% imprisonment rates - some may ultimately be removed because the census tract has an extremely low population ex. \~3 people), the shape of the distribution is unimodal and right skewed. The median imprisonment rate is `r carc_med` out of 100,000 with an IQR of `r carc_iqr`. This doesn't appear surprising - there are fewer census tracts with particularly high imprisonment rates.

**Income (Figure 7):** The shape of the income distribution is also unimodal with a less extreme right skew and a median value of `r inc_med` and iqr of `r inc_iqr`. This doesn't appear surprising - we'd expect median incomes of tracts to be concentrated towards the left.

### **Bivariate Data Exploration**

```{r}
#| label: bivariate-imprisonment-bll
#| fig.cap: Imprisonment vs BLL Indicator
#| fig.height: 3
#| fig.width: 5

bll_data %>% 
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>% 
  filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm =
                                       TRUE)) %>% 
  filter(num_bll != 0) %>% 
  filter(perc_bll_indicator != 0) %>%
  ggplot(aes(y = imprisonment_rt, x = perc_bll_indicator)) +
  geom_point(color = "steelblue3", size = 0.4, alpha = 0.4) +
  geom_smooth(method = "lm", se = FALSE, linewidth = 0.6, color = "black", linetype = 2) +
  labs(title = "Imprisonment Rate per 100,000 vs. Blood BLL Indicator",
       y = "Imprisonment Rate",
       x = "Percentage with BLL Indicator",
       caption = "Filtering out tracts who either had perc_bll_indicat0r = 0% or that tested 0 people") +
  theme_classic()

```

```{r}
#| label: bivariate-exploration-code
#| fig-show: hide

ggincome <- bll_data %>% 
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>% 
  filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>% 
  filter(num_bll != 0) %>% 
  ggplot(aes(y = imprisonment_rt, x = med_income)) +
  geom_histogram(color = "black", fill = "steelblue3") +
  geom_smooth(method = "lm", se = FALSE, size = 0.6, color = "black", linetype = 2) +
  labs(title = "Imprisonment Rate per 100,000 vs. Median Income",
       y = "Imprisonment Rate",
       x = "Median Income") +
  theme_classic()



ggage<- bll_data %>% 
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>% 
  filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>% 
  filter(num_bll != 0) %>% 
  ggplot(aes(x = age_15_to_29, y = imprisonment_rt)) +
  geom_point(alpha = 0.6, size = 0.6, color = "steelblue3") +
  geom_smooth(method = "lm", se = FALSE, size = 0.6, color = "black", linetype = 2) +
  labs(title = "Imprisonment Rate per 100,000 vs. percentage age 15-29",
       y = "Imprisonment Rate",
       x = "Percentage of population age 15-29") +
  theme_classic()  

```

**Imprisonment vs BLL Indicator (Figure 4):** Imprisonment rate and the percentage of a census tract with a high bll has a weak positive correlation - at first glance, the bll indicator doesn't seem to have significant explanatory power for the variability in a census tract's imprisonment rate.

**Imprisonment vs Median Income (Figure 8):** Imprisonment rate and median income has a generally negative correlation. This isn't surprising as it is generally understood that a lack of resources, including financial, can be a driving force towards engaging in illegal activities.

**Imprisonment vs Population Aged 15-29 (Figure 9):** Imprisonment rate and percentage of population aged 15-29 in the census tract has a generally positive correlation. This isn't surprising as it's generally understood that one's likelihood to engage in illegal activities is higher as an adolescent.

```{r}
#| label: interaction-effects-code
#| fig-show: hide

bll_data <- bll_data %>%
  mutate(POC_other = black + native_am + other_race, 
         race_categorical = ifelse(POC_other > median(POC_other, na.rm = TRUE), 
                                   "above_median_poc_other", 
                                   "below_median_poc_other"))

bll_data %>% 
filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>% 
filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>% 
filter(num_bll != 0) %>% 
ggplot(aes(x = med_income, y = imprisonment_rt, color = race_categorical)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Relationship Between Income and Imprisonment Rate per 100,000",
    subtitle = "By median percentages of non-white POC in tract",
    x = "Median Income",
    y = "Imprisonment Rate",
    color = "Above or below median"
  ) +
  theme_minimal()
```

**Potential Interactions (Figure 10):** There appears to be an interaction effect between race and income, as the relationship between median income and imprisonment rate differs by race. We created a variable, POC_other, indicating the percentage of a census tract population that is Black, Hispanic, or Native American. In this figure we categorized tracts with POC_other values that were above and below the median in the data of this variable to create a categorical split. The relationship between imprisonment rate and income appears more negatively correlated when the percentage of non-white people in the census tract is above the median.

## Methodology and Results

### **Checking Initial Modelling Conditions**

For our analysis process, we iterated through different models until we were satisfied with its conditions and performance. As an initial model, we did simple linear regression to predict a census tract's imprisonment rate per 100,000 using the bll indicator variable, racial makeup, median income, median age, percentage of males, and the interaction between income and race. The model output and conditions are below:

```{r}
#| label: intial-conditions

#filtering data points where num_bll = 0
bll_data_checking <- bll_data %>% 
  filter(num_bll != 0)

bll_full_model <- lm(imprisonment_rt ~ perc_bll_indicator + POC_other + med_income + median_age + perc_male + med_income * POC_other, data = bll_data) 

tidy(bll_full_model) %>% 
kable(digits = 3)

set.seed(210)

full_model_aug <- augment(bll_full_model)

```

```{r}
#| label: residual-plot-code-1
#| fig-show: hide

#there is one point with a residual so large the graph is not readable if we keep it. Filtering it out.
full_model_aug |>
  filter(.rownames != 2421) %>% 
  filter(.std.resid < 80) %>% 
  ggplot(aes(x = .fitted, y = .std.resid)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(
    title = "Residuals vs Fitted Values",
    x = "Fitted",
    y = "Standardized Residuals"
  )

#vif_fm <- vif(bll_full_model)
#vif_fm

#There does not appear to be too much multicollinearity.
```

Using the residual vs fitted plot **(Figure 11),** we can assess the model conditions. From this graph, we find

1.  Normality condition can be relaxed.
2.  Linearity condition not satisfied. Points not randomly scattered around the x = 0 line.
3.  Constant variance condition not satisfied. Points fan out across the x = 0 line.
4.  Independence condition also may not be satisfied. Census tracts next to each other could be more likely to have similar incarceration rates or blood lead levels.

Based on these initial conditions, we decided it would make sense to log transform some of our variables, specifically our median income and imprisonment rate variables.

```{r}
#| label: condition-checking
#| fig-show: hide
#Now going to check for the need to transform any variables

bll_data_checking %>% 
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>% 
filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>% 
 select(imprisonment_rt, perc_bll_indicator, med_income, median_age) %>%
 ggpairs(lower = list(continuous = wrap("points", size = 0.3)))
```

```{r}
#| label: log_transformation
#| fig-show: hide
#used +1 to avoid log(0) issues? Idk that was new for me and not sure we need to keep it.
bll_data_transformed <- bll_data_checking %>%
  mutate(
    log_med_income = log(med_income + 1),       
    log_imprisonment_rt = log(imprisonment_rt + 1) 
  ) %>% 
  filter(imprisonment_rt != 0)

log_model_checking <- lm(log_imprisonment_rt ~ log_med_income + perc_bll_indicator + 
                POC_other + median_age + perc_male, data = bll_data_transformed)

log_model_checking_aug <- augment(log_model_checking)

log_model_checking_aug |>
  ggplot(aes(x = .fitted, y = .std.resid)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(
    title = "Standardized Residuals vs Fitted Values",
    x = "Fitted",
    y = "Standardized Residuals"
  )


#vif_fm_log <- vif(log_model_checking)
#vif_fm_log

#Stripe is gone- happened after removing census tracts where imprisonment rate is equal to zero. We can leave the stripe in for this analysis and attribute it to these tracts.

```

**Splitting the Data**

We were also concerned about spatial correlation among census tracts because it is likely tracts next to each other in the same vicinity share similar characteristics such as policing practices environment, and school systems that could potentially impact rates of incarceration. So we originally split the data with 20% in training and 80% testing to minimize this effect. We received abysmal R squared values when doing this. Using ChatGPT for suggestions, it recommended spatial cross validation, which we researched further to ensure it made sense for our analysis^2^.

2\. [Geocomputation with R](https://r.geocompx.org/spatial-cv)

\pagebreak

It appeared to be a feasible method to address model over-fitting and independence issues within our data. Using this method we split our data into 5 blocks then able to do a 80% training, 20% testing split.

```{r}
#| label: loading-required-packages

install.packages("tigris")
install.packages("sf")
install.packages("blockCV")
library(blockCV)
library(tigris)
library(sf)



```

```{r}
#| label: joining-shapefiles-to-bl-data
#| include: FALSE

ca_tracts <- tracts(state = "CA", cb = TRUE, year = 2020)

ca_tracts <- ca_tracts %>%
  mutate(GEOID = as.character(GEOID))

bll_data_transformed <- bll_data_transformed %>%
  mutate(census_tract = as.character(census_tract)) 

bll_data_geo <- left_join(ca_tracts, bll_data_transformed, by = c("GEOID" = "census_tract"))

bll_data_geo <- bll_data_geo %>%
  filter(!is.na(log_imprisonment_rt), 
         !is.na(log_med_income),
         !is.na(perc_bll_indicator),
         !is.na(POC_other),
         !is.na(median_age),
         !is.na(perc_male))
```

```{r}
#| label: spatial-cross-validation
#| include: FALSE

#If training census tracts are next to testing census tracts, this could create spatial bias in the model. To address this, we employed spatial cross validation, which splits the data into folds that are distant from each other.

#Best sources explaining what is happening

#https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.13107
#https://www.frontiersin.org/journals/remote-sensing/articles/10.3389/frsen.2025.1531097/full

#Other sources

#https://stats.stackexchange.com/questions/460905/data-partitioning-for-spatial-data
#https://esajournals.onlinelibrary.wiley.com/doi/10.1002/ecm.1557

set.seed(210)

spatial_folds <- invisible(
  blockCV::spatialBlock(
    speciesData = bll_data_geo,
    theRange = 100000,
    k = 5,
    selection = "random",
    iteration = 100,
    showBlocks = TRUE))
  
bll_data_geo$fold <- spatial_folds$foldID

```

![Spatial Correlation in CA](data/ca_spatial_layout.png){width="300"}

This map shows the census tract within our data divided into five spatial blocks, each representing a fold used in spatial cross-validation. These blocks were generated with a block range of 100 km, ensuring that observations within each fold are spatially clustered and that training and testing sets are geographically separated. Each block is assigned an ID 1-5 and then used to partition the data into training and testing sets while minimizing spatial autocorrelation between them. The numbering on the map indicates fold membership, with neighboring census tracts grouped into the same spatial block whenever possible. Geographical distance is the only factor involved in generating the folds--other variables and their coefficients are not involved.

```{r}
#| label: plotting-lead-levels
#| progress: false
#| fig.cap: Spatial lead level category distribution

bll_data_geo <- bll_data_geo %>%
  mutate(lead_category = case_when(
    perc_bll_indicator < 0.5 ~ "< 0.5%",
    perc_bll_indicator < 1 ~ "0.5–1%",
    perc_bll_indicator < 2 ~ "1–2%",
    perc_bll_indicator < 5 ~ "2–5%",
    TRUE ~ ">5%"
  )) 

ggplot(bll_data_geo) +
  geom_sf(aes(fill = lead_category), color = NA) +
  scale_fill_viridis_d(option = "plasma", na.value = "grey80") +
  labs(
    title = "Blood Lead Level Categories by Census Tract",
    fill = "Lead Level Category"
  ) 
```

### Final Model Selection

With our transformed variables, we got a better residuals plot **(Figure 12)** with only a single outlier. From there, we arrived at our final model using step-wise selection to determine what predictor variables were most significant. Through this method, we found that indicators of bll in a census tract isn't statistically significant in predicting their imprisonment rate. However, median income, age, an the interaction between income and the racial makeup of a census tract were the most statistically significant in this model. We elected to keep blood lead level in the model because it was our variable of interest.

```{r}
#| label: splitting

#we assign 3 folds to the training data and 2 to the testing data

train_folds <- c(1, 2, 3, 4)
test_folds  <- c(5)

bll_train <- bll_data_geo %>%
  filter(fold %in% train_folds)

bll_test <- bll_data_geo %>%
  filter(fold %in% test_folds)

```

```{r}
#| label: removing-influential-points
#| fig-show: hide
#choosing interaction model

log_model_actual <- lm(log_imprisonment_rt ~ log_med_income + perc_bll_indicator + 
                POC_other + median_age + perc_male + POC_other * log_med_income, data = bll_train)

log_model_actual_aug <- augment(log_model_actual)

log_model_actual_aug |>
  ggplot(aes(x = .fitted, y = .std.resid, color = .cooksd)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(
    title = "Standardized Residuals vs Fitted Values",
    x = "Fitted Value",
    y = "Standardized Residual",
    color = "Cook's Distance"
  ) +
  scale_color_viridis_c() +
  theme_minimal() 

#log_model_actual_aug %>% 
  #filter(.cooksd >= 0.5) %>% 
  #select(.hat, .std.resid, .cooksd)

tidy(log_model_actual) %>% 
  kable(digits = 3)

#It does not appear there are any data points in the training data with a cook's distance greater than 0.5. Therefore, none need to be removed.
```

```{r}
#| label: model-selection
#| fig.cap: Final Model output 

library(MASS)


stepwise_model_forced <- stepAIC(
  log_model_actual,
  scope = list(
    lower = ~ perc_bll_indicator, 
    upper = ~ log_med_income + perc_bll_indicator + POC_other + median_age + perc_male + POC_other * log_med_income
  ),
  direction = "both",
  trace = 0
)

#summary(stepwise_model_forced)

#tidy(stepwise_model_forced) %>%
 # kable(digits = 3)

#Interestingly, the lead predictor was removed originally through stepwise selection, perhaps indicating that it is not useful here. We are going to force it back into the model since it is a variable of interest.

```

```{r}
#| label: final-model-evaluation

log_predictions <- predict(log_model_actual, newdata = bll_test)

bll_test <- bll_test %>%
  mutate(imprisonment_rate = exp(log_imprisonment_rt))

bll_test_results <- bll_test %>%
  mutate(predicted = exp(log_predictions)) %>%
  dplyr::select(imprisonment_rate, predicted)

metrics_table <- bll_test_results %>%
  yardstick::metrics(truth = imprisonment_rate, estimate = predicted) %>% 
  filter(.metric %in% c("rmse", "rsq"))

metrics_table %>%
  kable(digits = 3, caption = "Model Performance (RMSE and R-squared)")

```

```{r}
#summary(log_model_actual)$r.squared
#summary(log_model_actual2)$r.squared
```

```{r, eval = FALSE}
bll_data_geo %>%
  count(fold) %>%
  arrange(fold) %>%
  kable(digits = 0, caption = "Sample Size per Spatial Fold")
```

## Discussion

Our ultimate research goal was to determine how well blood lead levels can explain rates of imprisonment, with a focus on California census tracts. We hypothesized that there would be a significant relationship between blood lead levels based on existing research linking lead exposure to increased "criminal behaviour". We also wanted to factor in other various social factors that are well understood to have effects on one's likelihood to be imprisoned, such as racial and socioeconimic data. Based on our final chosen model, it appears that the blood lead levels of a census tract aren't statistically significant in predicting imprisonment rate (0.296 \> 0.05) while, income, age, and the interaction between income and race were the most significant predictors. We understand that the circumstances surrounding one's likelihood of being imprisoned are complex and this is only a single analysis where lead exposure wasn't a particularly useful metric. Other factors, like median income (\~0 \< 0.05), were far more impactful: for every, 1% increase in median income the model predicts a 0.663% decrease in incarceration rate, on average, holding all else constant. While there do exist studies that come to differing conclusions, general discourse on this topic seems to reveal that differing results may be due to the misunderstood or overstated effect of lead exposure on incarceration rate, or at the very least, it's not a useful metric on its own.

**Interesting Insights**

We used spatial cross validation to create training and testing sets that account for the fact that census tracts next to each other in our dataset likely have similar values. Inclusion of some census tracts in the training data that are right next to census tracts in the testing data could therefore bias model performance. So a model trained on spatially cross validated data evaluated using data that is geographically distant from the training set should in theory be more robust. We would expect the R squared values to be lower and the RMSE values to be higher for the spatially cross validated model. While the RMSE values were higher for the spatially cross validated model, in line with our prediction, interestingly, this was not the case for the R squared values--compared to a model that was training on randomly split data (see Table 5 in appendix: 80/20 train test - roughly the same proportion of the total census tracts as the Spatial CV train test), the spatial CV model has a higher R squared. This could potentially be caused by the random split model over-fitting to regions that generalize poorly to the new regions. Even though the RMSE value is worse, the spatial CV model likely provides a more realistic prediction on new regions given the way it was trained, making it, in our opinion, the superior model.

\pagebreak

**Limitations and Future Work**

In terms of potential limitations or future changes of our analysis methods, it would be interesting to incorporate even more geographical regions as there are many states that currently have significant levels of lead exposure. Perhaps there are broader patterns we're not seeing with a focus on California alone. Alternatively, it would be interesting to see the same analysis except on California counties instead of tracts to easily relate county-specific traits, which might be more stable, to our final conclusions. For our spatial cross-validation, we could also vary the block size to test whether that improves model performance.

A potential limitation of our current analysis is the way that we measure blood lead levels of a county. We are using blood lead levels in children to approximate risk of lead exposure for all people in the census tract, which may not be an accurate representation of the reality. A better method would be to combine blood lead level testing in children with other forms of measuring potential for lead exposure, like water testing.

\pagebreak

## **Appendix**

### **Univariate EDA**

```{r}
#| label: income-code-plot
#| fig-cap: Income distribution in CA Census Tracts

inc_limit <- quantile(bll_data$med_income, 0.99, na.rm = TRUE)

bll_data |>
  ggplot(aes(x = med_income)) +
  geom_histogram(color = "black", fill = "steelblue3") +
  scale_x_continuous(limits = c(0, 200000)) +
  scale_y_continuous(limits = c(0, 1000)) +
  labs(
    title = "Distribution of Median Income in CA",
    subtitle = "by Census Tract",
    x = "Median Income ($)",
    y = "Count"
  ) + theme_classic()

inc_med <- median(bll_data$med_income, na.rm = TRUE)
inc_iqr <- IQR(bll_data$med_income, na.rm = TRUE)
```

### Bivariate EDA

```{r}
#| label: bivariate-imp-med-income
#| fig-cap: Imprisonment vs Median Income

bll_data %>%
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>%
  filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>%
  filter(num_bll != 0) %>%
  ggplot(aes(y = imprisonment_rt, x = med_income)) +
  geom_point(alpha = 0.6, size = 0.6, color = "steelblue3") +
  geom_smooth(method = "lm", se = FALSE, size = 0.8, color = "black", linetype = 2) +
  labs(title = "Imprisonment Rate vs. Median Income",
       y = "Imprisonment Rate",
       x = "Median Income",
       ) +
  theme_classic()

```

```{r}
#| label: bivariate-exploration
#| fig-cap: Imprisonment Rate vs Adolescent Population

bll_data %>%
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>%
  filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>%
  filter(num_bll != 0) %>%
  ggplot(aes(x = age_15_to_29, y = imprisonment_rt)) +
  geom_point(alpha = 0.6, size = 0.6, color = "steelblue3") +
  geom_smooth(method = "lm", se = FALSE, size = 0.8, color = "black", linetype = 2) +
  labs(title = "Imprisonment Rate vs. percentage age 15-29",
       y = "Imprisonment Rate",
       x = "Percentage of population age 15-29",
       ) +
  theme_classic()  
```

```{r}
#| label: interaction-effects-plot
#| fig-cap: Relationship between race, income, and imprisonment

bll_data <- bll_data %>%
  mutate(POC_other = black + native_am + other_race, 
         race_categorical = ifelse(POC_other > median(POC_other, na.rm = TRUE), 
                                   "above_median_poc_other", 
                                   "below_median_poc_other"))

# Filter out rows with NA values in 'race_categorical'
bll_data %>%
  filter(perc_bll_indicator <= quantile(perc_bll_indicator, 0.98, na.rm = TRUE)) %>%
  filter(imprisonment_rt <= quantile(imprisonment_rt, 0.98, na.rm = TRUE)) %>%
  filter(num_bll != 0) %>%
  filter(!is.na(race_categorical)) %>%  # Remove rows with NA in race_categorical
  ggplot(aes(x = med_income, y = imprisonment_rt, color = race_categorical)) +
  geom_point(alpha = 0.6, size = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = 2) +
  labs(
    title = "Relationship between income and Imprisonment",
    subtitle = "By median percentages of non-white POC",
    x = "Median Income",
    y = "Imprisonment Rate",
    color = "Above/below Median Percentage",
  ) +
  scale_color_manual(values = c("steelblue3", "mediumorchid")) +
  theme_minimal() +
  facet_wrap(~race_categorical, ncol = 1)
```

```{r}
#| label: residual-plot-initial
#| fig-cap: Residual plot of initial modeling output

#there is one point with a residual so large the graph is not readable if we keep it. Filtering it out.
full_model_aug |>
  filter(.rownames != 2421) %>%
  filter(.std.resid < 80) %>%
  ggplot(aes(x = .fitted, y = .std.resid,color = .cooksd)) +
  geom_point(alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
  labs(
    title = "Initial Model: Standardized Residuals vs Fitted Values",
    x = "Fitted",
    y = "Standardized Residuals",
    color = "Cook's Distance"
  ) + 
  theme_minimal()+
  scale_color_viridis_c()

#vif_fm <- vif(bll_full_model)
#vif_fm

#There does not appear to be too much multicollinearity.
```

```{r}
#| label: residual-plot-final
#| fig-cap: Residual plot of final modeling output
#choosing interaction model

log_model_actual <- lm(log_imprisonment_rt ~ log_med_income + perc_bll_indicator + 
                POC_other + median_age + perc_male + POC_other * log_med_income, data = bll_train)

log_model_actual_aug <- augment(log_model_actual)

log_model_actual_aug |>
  ggplot(aes(x = .fitted, y = .std.resid, color = .cooksd)) +
  geom_point(alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
  labs(
    title = "Final Model: Standardized Residuals vs Fitted Values",
    x = "Fitted Value",
    y = "Standardized Residual",
    color = "Cook's Distance",
  ) +
  scale_color_viridis_c() +
  theme_minimal() 

#log_model_actual_aug %>% 
  #filter(.cooksd >= 0.5) %>% 
  #select(.hat, .std.resid, .cooksd)

#tidy(log_model_actual) %>% 

```

```{r}
#| label: checking-effects-of-block-CV-model-2

#how do we know that the spatial CV successfully addressed the independence problem?
#We would expect the models to be worse predictors on the spatial CV data. 

#randomly split data

set.seed(210)
random_split <- initial_split(bll_data_geo, prop = 0.8)
bll_train_random <- training(random_split)
bll_test_random  <- testing(random_split)

log_model_actual2 <- lm(log_imprisonment_rt ~ log_med_income + perc_bll_indicator + 
                POC_other + median_age + perc_male + POC_other * log_med_income, data = bll_train_random)

stepwise_model_forced2 <- stepAIC(
  log_model_actual2,
  scope = list(
    lower = ~ perc_bll_indicator, 
    upper = ~ log_med_income + perc_bll_indicator + POC_other + median_age + perc_male + POC_other * log_med_income
  ),
  direction = "both",
  trace = 0
)

log_predictions2 <- predict(log_model_actual2, newdata = bll_test_random)

bll_test_random <- bll_test_random %>%
  mutate(imprisonment_rate = exp(log_imprisonment_rt))

bll_test_results2 <- bll_test_random %>%
  mutate(predicted = exp(log_predictions2)) %>%
  dplyr::select(imprisonment_rate, predicted)

metrics_table <- bll_test_results2 %>%
  yardstick::metrics(truth = imprisonment_rate, estimate = predicted) %>% 
  filter(.metric %in% c("rmse", "rsq"))

metrics_table %>%
  kable(digits = 3, caption = "Random-Split Model Performance (RMSE and R-squared)")

#the R squared value for the random split is higher, which is odd.
```
